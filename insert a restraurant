import java.awt.Container;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class UberEats extends JFrame {
	private Connection conn;
	private Statement stmt;
	private JList RestaurantIDList;
	private JButton getRestaurant, insertRestaurant,deleteRestaurant,updateRestaurant;
	private JTextArea errorText;
	private JLabel RestaurantidLabel,locationLabel,ratingLabel,foodmenuLabel,openclosetimeLabel;
	private JTextField RestaurantidText,locationText,ratingText,foodmenuText,openclosetimeText;
	private ResultSet rs;
	public UberEats()
	{
		try 
		{
	     Class.forName("oracle.jdbc.driver.OracleDriver");
	    } 
		catch (Exception e) 
		{
	      System.err.println("Unable to find and load driver");
	      System.exit(1);
	    }
	}
	private void loadRestaurant()
	{
		Vector v = new Vector();
	    try 
		{
	      rs = stmt.executeQuery("SELECT * FROM UberEats");
	      while (rs.next()) 
		  {
	        v.addElement(rs.getString("Rid"));
	      }
	    } 
		catch (SQLException e) 
		{ System.out.println("Error1");
	      displaySQLErrors(e);
	    }
	    RestaurantIDList.setListData(v);
	}
	public void GUI() 
	  {
	    Container c = getContentPane();
	    c.setLayout(new FlowLayout());
	    RestaurantIDList = new JList();
	    loadRestaurant();
	    JScrollPane RestaurantIDListScrollPane = new JScrollPane(RestaurantIDList); 
	    getRestaurant = new JButton("Get Restaurant Details");
	    getRestaurant.addActionListener(new ActionListener() {
	        public void actionPerformed(ActionEvent e) {
	          try {
	          rs = stmt.executeQuery("SELECT * FROM UberEats");
	            while (rs.next()) 
	  		  {
	              if (rs.getString("Rid").equals(
	            		  RestaurantIDList.getSelectedValue()))
	                break;
	            }
	            if (!rs.isAfterLast()) {
	            	RestaurantidText.setText(rs.getString("Restaurant id"));
	            	locationText.setText(rs.getString("Location"));
	            	ratingText.setText(rs.getString("Rating"));
	            	foodmenuText.setText(rs.getString("Food Menu"));
	            	openclosetimeText.setText(rs.getString("Open Close Time"));
	            }
	          } catch (SQLException selectException) {
	  		  System.out.println("Error2");
	            displaySQLErrors(selectException);
	          }
	        }
	      });
	    insertRestaurant = new JButton("Insert Restaurantt Details");
	    insertRestaurant.addActionListener(new ActionListener() {
	      public void actionPerformed(ActionEvent e) {
	        try {
	          Statement stmt = conn.createStatement();
	          int i = stmt
	              .executeUpdate("INSERT INTO UberEats VALUES(" + 
	                  + RestaurantidText.getText() + ", " + "'"
	                  + foodmenuText.getText() + "', " + "'" + locationText.getText() +"'," 
	                  + openclosetimeText.getText() + ", "  + ratingText.getText()
	                    + ")" );
	          errorText.append("\nInserted " + i + " rows successfully");
	          RestaurantIDList.removeAll();
	          loadRestaurant();
	        } catch (SQLException insertException) {
			  //System.out.println("Error3");
	          displaySQLErrors(insertException);
	        }
	      }
	    });
 deleteRestaurant = new JButton("Delete Restaurant");
	    deleteRestaurant.addActionListener(new ActionListener() {
	      public void actionPerformed(ActionEvent e) {
	        try {
	          Statement stmt = conn.createStatement();
	          int i = stmt
	              .executeUpdate("DELETE FROM UberEats WHERE Rid = "
	                  + RestaurantIDList.getSelectedValue());
	          errorText.append("\nDeleted " + i + " rows successfully");
	          RestaurantIDList.removeAll();
	          loadRestaurant();
	        } catch (SQLException insertException) {
			 // System.out.println("Error4");
	          displaySQLErrors(insertException);
	        }
	      }
	    });
	    
 updateRestaurant = new JButton("Update Restaurant");
	    updateRestaurant.addActionListener(new ActionListener() {
	      public void actionPerformed(ActionEvent e) {
	        try {
	          Statement stmt = conn.createStatement();
	          int i = stmt.executeUpdate("UPDATE UberEats "
	              + "SET foodmenu='" + foodmenuText.getText() + "', "
	              + "rating=" + ratingText.getText() + ", "
	              + "location= '" + locationText.getText()+ "'," + 
	              "openclosetime='"	+ openclosetimeText.getText() + "'," + "WHERE Rid = "
	              + RestaurantIDList.getSelectedValue());
	          errorText.append("\nUpdated " + i + " rows successfully");
	          RestaurantIDList.removeAll();
	          loadRestaurant(); 
	        } catch (SQLException insertException) {
			   System.out.println("Error5");
	          displaySQLErrors(insertException);
	        }
	      }
	    });
	    
	    [12:24, 4/24/2020] Samhita:  JPanel pn = new JPanel(new GridLayout(1,2));
	    JPanel pn1 = new JPanel(new GridLayout(5, 1));
	    pn.add(RestaurantIDListScrollPane);
	    pn1.add(getRestaurant);
	    pn1.add(insertRestaurant);
	    pn1.add(deleteRestaurant);
	    pn1.add(updateRestaurant);
	    pn.add(pn1);
	    
	    RestaurantidText = new JTextField(15);
	    openclosetimeText = new JTextField(15);
	    locationText = new JTextField(15);
	    ratingText = new JTextField(15);
	    foodmenuText = new JTextField(15);
	    RestaurantidLabel = new JLabel("Restaurant ID");
	    openclosetimeLabel = new JLabel("Open Close Time");
	    locationLabel =new JLabel("Location");
	    ratingLabel = new JLabel("Rating");
	    foodmenuLabel = new JLabel("Food Menu");
	    
	    errorText = new JTextArea(5, 15);
	    errorText.setEditable(false);
	    
	    JPanel pn2 = new JPanel();
	    pn2.setLayout(new GridLayout(6, 1));
	    pn2.add(RestaurantidLabel);
	    pn2.add(RestaurantidText);
	    pn2.add(locationLabel);
	    pn2.add(locationText);
	    pn2.add(foodmenuLabel);
	    pn2.add(foodmenuText);
	    pn2.add(openclosetimeLabel);
	    pn2.add(openclosetimeText);
	    pn2.add(ratingLabel);
	    pn2.add(ratingText);

	    
	    JPanel pn3 = new JPanel();
	    pn3.add(new JScrollPane(errorText));
	    
	    c.add(pn);
	    c.add(pn2);
	    c.add(pn3);
	 
	    setSize(500, 500);
	    setVisible(true);
	    
}
	public void connectToDB() {
	    try {
	      conn = DriverManager
	          .getConnection("jdbc:oracle:thin:@localhost:1521:xe","system","OracleDBMS2090&");
	      stmt = conn.createStatement();

	    } catch (SQLException connectException) {
	      System.out.println(connectException.getMessage());
	      System.out.println(connectException.getSQLState());
	      System.out.println(connectException.getErrorCode());
	      System.exit(1);
	    }
	  }
	
	private void displaySQLErrors(SQLException e) {
	    errorText.append("SQLException: " + e.getMessage() + "\n");
	    errorText.append("SQLState:     " + e.getSQLState() + "\n");
	    errorText.append("VendorError:  " + e.getErrorCode() + "\n");
	  }

	  private void init()
	  {
	    connectToDB();
	  }
	  
	/*  public static void main(String[] args) 
	  {
	    UberEats ubr = new UberEats();

	    ubr.addWindowListener((WindowListener) new WindowAdapter(){
	      public void windowClosing(WindowEvent e) {
	        System.exit(0);
	      }
	    });
	    ubr.init();
	    ubr.GUI();
	  } */

}
